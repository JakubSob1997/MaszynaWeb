{
	"instructionList": {
		"instructionDataArray": [
			{
				"name": "STP",
				"sourceCode": "ROZKAZ STP;\nARGUMENTY 0;\nczyt wys wei il;\nstop;\n"
			},
			{
				"name": "DOD",
				"sourceCode": "ROZKAZ DOD;\nczyt wys wei il;\nwyad wea;\nwyl wea czyt wys weja dod weak;\n"
			},
			{
				"name": "ODE",
				"sourceCode": "ROZKAZ ODE;\nczyt wys wei il;\nwyad wea;\nwyl wea czyt wys weja ode weak;\n"
			},
			{
				"name": "POB",
				"sourceCode": "ROZKAZ POB;\nczyt wys wei il;\nwyad wea;\nwyl wea czyt wys weja przep weak;\n"
			},
			{
				"name": "LAD",
				"sourceCode": "ROZKAZ LAD;\nczyt wys wei il;\nwyad wea wyak wes;\npisz wyl wea;\n"
			},
			{
				"name": "SOB",
				"sourceCode": "ROZKAZ SOB;\nczyt wys wei il;\nwyad wea wel;\n"
			},
			{
				"name": "SOM",
				"sourceCode": "ROZKAZ SOM;\nczyt wys wei il;\nJEZELI Z @skok;\nwyl wea KONIEC;\n@skok wyad wea wel;\n"
			},
			{
				"name": "SOZ",
				"sourceCode": "ROZKAZ SOZ;\nczyt wys wei il;\nJEZELI ZAK @skok;\nwyl wea KONIEC;\n@skok wyad wea wel;\n"
			},
			{
				"name": "IN",
				"sourceCode": "ROZKAZ IN;\nczyt wys wei il;\nwyak weja ode weak start;\n@wait wyg weja ode weak;\nJEzELI Z TO @done GDY NIE @wait;\n@done wyrb weja przep weak wyl wea;"
			},
			{
				"name": "OUT",
				"sourceCode": "ROZKAZ OUT;\nczyt wys wei il;\nwyak werb wes weja ode weak start;\n@wait wyg weja ode weak;\nJezeli z to @done gdy nie @wait;\n@done wys weja przep weak wyl wea;"
			},
			{
				"name": "FIBO",
				"sourceCode": "ROZKAZ FIBO;\n//SETUP\nczyt wys wei il;\nwyak weja ode weak;\nwyws wes as;\nwyak wex iak wyad wews;\nwyak wey;\n\n// Ws check\n@loop\nwyws as weak przep weja;\nJEZELI ZAK @end_x;\n\n// Add x\nwyy przep weak weja;\nwyx dod weak weja;\nwyak wex dws;\n\n\n// Ws check\nwyws as weak przep weja;\nJEZELI ZAK @end_y;\n\n//Add y\nwyx przep weak weja;\nwyy dod weak weja;\nwyak wey dws;\nDALEJ @loop;\n\n//End\n@end_x wyx weja przep weak;\nDALEJ @end;\n@end_y wyy weja przep weak;\n\n@end\nwyl wea;\nwys as wews;\n\n\n"
			},
			{
				"name": "CALL",
				"sourceCode": "ROZKAZ CALL;\nczyt wys wei il;\ndws wyls wes;\nwyws wea;\npisz wyad wel wea;\n"
			},
			{
				"name": "RET",
				"sourceCode": "ROZKAZ RET;\nARGUMENTY 0;\nczyt wys wei il;\nwyws wea iws;\nczyt wys as wel wea;\n"
			},
			{
				"name": "PSH",
				"sourceCode": "ROZKAZ PSH;\nARGUMENTY 0;\nczyt wys wei il;\nwyak wes dws;\nwyws wea;\npisz wyl wea;\n\n"
			},
			{
				"name": "PSHAD",
				"sourceCode": "ROZKAZ PSHAD;\nczyt wys wei il;\nwyad wea dws;\nczyt wyws wea;\npisz wyl wea;\n\n"
			},
			{
				"name": "POP",
				"sourceCode": "ROZKAZ POP;\nARGUMENTY 0;\nczyt wys wei il;\nwyws wea iws;\nczyt wys weja przep weak wyl wea;\n\n"
			},
			{
				"name": "POPAD",
				"sourceCode": "ROZKAZ POPAD;\nczyt wys wei il;\nwyws wea iws;\nczyt wyad wea;\npisz wyl wea;\n\n"
			},
			{
				"name": "TOP",
				"sourceCode": "ROZKAZ TOP;\nARGUMENTY 0;\nczyt wys wei il;\nwyws wea;\nczyt wys weja przep weak wyl wea;\n\n"
			},
			{
				"name": "TOPN",
				"sourceCode": "ROZKAZ TOPN;\nczyt wys wei il;\nwyws as weja przep weak;\nwyad as weja dod weak;\nwyak as wea;\nczyt wys weja przep weak wyl wea;\n\n"
			}
		]
	},
	"settings": {
		"codeWidth": 6,
		"adressWidth": 7,
		"extensionData": {
			"BusConnection": true,
			"AK_Increment": true,
			"ALU_Logic": true,
			"ALU_ExtendedMath": true,
			"Stack": true,
			"X_Register": true,
			"Y_Register": true,
			"Interupt": true,
			"InputOutput": true,
			"Flags": true,
			"T_Register": true
		},
		"intAdressList": [
			1,
			2,
			3,
			4
		]
	},
	"program": "\n// Program that modifies itself in runtime\n// To display 15 elements from fibonacci sequence\n\n  POB counter\nloop:\n  ODE _15\n  SOM continue\n  SOZ continue\n  STP\ncontinue:\n  DOD _15\n  DOD fiboInstr\n  LAD exec //exec = FIBO (counter)\nexec:\n  RPA\n  OUT 4\n  \n  POB counter\n  DOD _1\n  LAD counter\n  SOB loop\n\nfiboInstr: FIBO 0\ncounter: RST 0\n_1: RST 1\n_15: RST 15"
}