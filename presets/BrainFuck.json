{
  "instructionList": {
    "instructionDataArray": [
      {
        "name": "BFSTOP",
        "sourceCode": "ROZKAZ BFSTOP;\nARGUMENTY 0;\nczyt wys wei il;\nstop;\n"
      },
      {
        "name": "BFINIT",
        "sourceCode": "ROZKAZ BFINIT;\nczyt wys wei il;\nwyad wews;\nwyl wea;\n"
      },
      {
        "name": ">",
        "sourceCode": "// BRAINFUCK >\nROZKAZ >;\nARGUMENTY 0;\nczyt wys wei il;\niws wyl wea;\n"
      },
      {
        "name": "<",
        "sourceCode": "// BRAINFCK <\nROZKAZ <;\nARGUMENTY 0;\nczyt wys wei il;\ndws wyl wea;\n"
      },
      {
        "name": "+",
        "sourceCode": "// BRAINFCK +\nROZKAZ +;\nARGUMENTY 0;\nczyt wys wei il;\nwyws wea;\nczyt wys weja przep weak;\niak;\nwyak wes;\npisz wyl wea;\n\n"
      },
      {
        "name": "-",
        "sourceCode": "ROZKAZ -;\nARGUMENTY 0;\nczyt wys wei il;\nwyws wea;\nczyt wys weja przep weak;\ndak;\nwyak wes;\npisz wyl wea;\n\n"
      },
      {
        "name": ".",
        "sourceCode": "ROZKAZ .;\nczyt wys wei il;\nwyws wea wyak weja ode weak ;\nczyt wys werb start;\n@wait wyg weja ode weak;\nJezeli z to @done gdy nie @wait;\n@done wys weja przep weak wyl wea;"
      },
      {
        "name": ",",
        "sourceCode": "ROZKAZ ,;\nczyt wys wei il;\nwyws wea wyak weja ode weak start;\n@wait wyg weja ode weak;\nJezeli z to @done gdy nie @wait;\n@done wyrb wes;\npisz wyl wea;"
      },
      {
        "name": "[",
        "sourceCode": "ROZKAZ [;\nARGUMENTY 0;\nczyt wys wei il;\nwyx weja przep weak;\ndak wyls wes;\nwyak as wea wex;\npisz wyl wea;\n"
      },
      {
        "name": "]",
        "sourceCode": "ROZKAZ ];\nARGUMENTY 0;\nczyt wys wei il;\nwyws wea;\nczyt wys weja przep weak\nJEZELI ZAK @zero;\nwyx weja as wea;\nczyt wys as wel wea KONIEC; \n@zero \nwyx weja przep weak;\niak;\nwyak wex wyl wea;\n"
      }
    ]
  },
  "settings": {
    "codeWidth": 6,
    "adressWidth": 10,
    "extensionData": {
      "BusConnection": true,
      "AK_Increment": true,
      "ALU_Logic": false,
      "ALU_ExtendedMath": false,
      "Stack": true,
      "X_Register": true,
      "Y_Register": false,
      "Interupt": false,
      "InputOutput": true,
      "Flags": true,
      "T_Register": true
    },
    "intAdressList": [
      1,
      2,
      3,
      4
    ]
  },
  "program": "//Hello World Writen in MW Brainfuck\n//https://en.wikipedia.org/wiki/Brainfuck\n\n\nBFINIT start\n\n//Setup\n+ + + + + + + + + +\n[\n\t> + + + + + + +\n\t> + + + + + + + + + +\n\t> + + +\n\t> +\n\t< < < < -\n]\n\n> + + . 2 \t\t\t\t\t\t\t\t//'H'\n> + . 2\t\t\t\t\t\t\t\t\t//'e'\n+ + + + + + + .\t2\t\t\t\t\t\t//'l'\n. 2                 \t\t\t\t\t//'l'\n+ + + . 2              \t\t\t\t\t//'o'\n> + + . 2              \t\t\t\t\t//' '\n< < + + + + + + + + + + + + + + + . 2\t//'W'\n> . 2                \t\t\t\t\t//'o'\n+ + + . 2              \t\t\t\t\t//'r'\n- - - - - - . 2           \t\t\t\t//'l'\n- - - - - - - - . 2         \t\t\t//'d'\n> + . 2               \t\t\t\t\t//'!'\n> . 2                \t\t\t\t\t//'/n'\n\nBFSTOP\n\nstart: RPA\n\n\n"
}